[tool:pytest]
# Pytest configuration for spike-snn-event-vision-kit

# Minimum version
minversion = 6.0

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = 
    tests
    src/spike_snn_event

# Additional command-line options
addopts = 
    -ra
    -q
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    --cov=spike_snn_event
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --durations=10
    --maxfail=5

# Custom markers for test categorization
markers =
    unit: Unit tests that don't require external dependencies
    integration: Integration tests that require multiple components
    hardware: Tests that require specific hardware (event cameras, GPUs, etc.)
    slow: Tests that take more than 1 second to run
    network: Tests that require network connectivity
    gpu: Tests that require CUDA GPU
    loihi: Tests that require Intel Loihi hardware
    akida: Tests that require BrainChip Akida hardware
    ros2: Tests that require ROS2 environment
    benchmark: Performance benchmarking tests
    regression: Regression tests for previously found bugs
    smoke: Quick smoke tests for basic functionality
    experimental: Tests for experimental features

# Timeout for tests (in seconds)
timeout = 300

# Filter warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*CUDA.*:UserWarning
    error::RuntimeWarning

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Test collection
collect_ignore = 
    setup.py
    build
    dist
    .tox
    examples

# pytest-xdist settings (for parallel testing)
dist = loadfile
tx = popen//auto

# Console output
console_output_style = progress