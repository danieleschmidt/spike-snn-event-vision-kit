{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Install Dependencies",
            "type": "shell",
            "command": "pip",
            "args": ["install", "-e", ".[dev,docs,monitoring]"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Tests",
            "type": "shell",
            "command": "python",
            "args": ["-m", "pytest", "tests/", "-v"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Run Tests with Coverage",
            "type": "shell",
            "command": "python",
            "args": [
                "-m", "pytest", 
                "tests/", 
                "-v",
                "--cov=src/spike_snn_event",
                "--cov-report=html",
                "--cov-report=term"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Format Code",
            "type": "shell",
            "command": "black",
            "args": ["src/", "tests/"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Sort Imports",
            "type": "shell",
            "command": "isort",
            "args": ["src/", "tests/", "--profile", "black"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Lint Code",
            "type": "shell",
            "command": "flake8",
            "args": ["src/", "tests/"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                {
                    "owner": "flake8",
                    "fileLocation": "absolute",
                    "pattern": {
                        "regexp": "^(.+):(\\d+):(\\d+):\\s+(.+)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "message": 4
                    }
                }
            ]
        },
        {
            "label": "Type Check",
            "type": "shell",
            "command": "mypy",
            "args": ["src/"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [
                {
                    "owner": "mypy",
                    "fileLocation": "absolute",
                    "pattern": {
                        "regexp": "^(.+):(\\d+):(\\d+):\\s+(error|warning|note):\\s+(.+)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "severity": 4,
                        "message": 5
                    }
                }
            ]
        },
        {
            "label": "Security Check",
            "type": "shell",
            "command": "bandit",
            "args": ["-r", "src/", "-f", "json"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Pre-commit All",
            "type": "shell",
            "command": "pre-commit",
            "args": ["run", "--all-files"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Build Documentation",
            "type": "shell",
            "command": "make",
            "args": ["html"],
            "options": {
                "cwd": "${workspaceFolder}/docs"
            },
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Clean Python Cache",
            "type": "shell", 
            "command": "find",
            "args": [".", "-type", "d", "-name", "__pycache__", "-exec", "rm", "-rf", "{}", "+"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "silent",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Train SNN Model",
            "type": "shell",
            "command": "python",
            "args": [
                "-m", "spike_snn_event.cli",
                "train",
                "--config", "configs/train_default.yaml"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Benchmark Performance",
            "type": "shell",
            "command": "python",
            "args": [
                "-m", "spike_snn_event.cli",
                "benchmark",
                "--dataset", "n-cars",
                "--model", "spiking_yolo"
            ],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Docker Build",
            "type": "shell",
            "command": "docker",
            "args": ["build", "-t", "spike-snn-event-vision", "."],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Docker Compose Up",
            "type": "shell",
            "command": "docker-compose",
            "args": ["up", "-d"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Start Jupyter Lab",
            "type": "shell",
            "command": "jupyter",
            "args": [
                "lab",
                "--ip=0.0.0.0",
                "--port=8888",
                "--no-browser",
                "--allow-root"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "isBackground": true,
            "problemMatcher": []
        },
        {
            "label": "Full Code Quality Check",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Format Code",
                "Sort Imports", 
                "Lint Code",
                "Type Check",
                "Security Check"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        }
    ]
}